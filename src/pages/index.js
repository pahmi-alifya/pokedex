import Head from "next/head";
import dynamic from "next/dynamic";

import { useQuery } from "@apollo/client";

import { GET_POKEMONS } from "@/graphql/queries";
import InfiniteScroll from "react-infinite-scroll-component";

const Loading = dynamic(() => import("@/components/Loading"));
const Card = dynamic(() => import("@/components/Card"));

export default function Home() {
  const { loading, error, data, fetchMore } = useQuery(GET_POKEMONS, {
    variables: {
      offset: 0,
      take: 50,
    },
  });

  if (loading) return <Loading />;
  if (error) return `Error! ${error.message}`;

  console.error("Response from server", data);

  const loadMore = () => {
    fetchMore({
      variables: {
        offset: data.getAllPokemon.length,
      },
    });
  };

  return (
    <>
      <Head>
        <title>Pokedex</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="p-10">
        <h1 className="text-2xl mb-4 font-bold">Pokemon List</h1>
        <InfiniteScroll
          dataLength={data.getAllPokemon.length}
          next={loadMore}
          hasMore
          loader={<h3> Loading...</h3>}
          endMessage={<h4>Nothing more to show</h4>}
        >
          <div className="grid grid-cols-4 gap-5 content-center">
            {data.getAllPokemon.map((pokemon, index) => (
              <Card key={pokemon.key} pokemon={pokemon} />
            ))}
          </div>
        </InfiniteScroll>
      </main>
    </>
  );
}
